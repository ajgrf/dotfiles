#!/bin/sh

trap 'exit 2' 2

if [ -f "${XDG_CONFIG_HOME:-$HOME/.config}/user-dirs.dirs" ]; then
	. "${XDG_CONFIG_HOME:-$HOME/.config}/user-dirs.dirs"
fi
XDG_DOWNLOAD_DIR="${XDG_DOWNLOAD_DIR:-$HOME/Downloads}"

# If stdin is a pipe, assume it's from newsbeuter and parse the desired link
case $(readlink -e /proc/$$/fd/0) in
/dev/pts/*)
	;;
*)
	input="$(sed -n '/^Link: / s///p' < /dev/fd/0)"
	cd "$XDG_DOWNLOAD_DIR"
	exec youtube-dl "$input"
	;;
esac

# Otherwise, if no arguments are provided, try to find a link in the X
# selection
if [ $# -eq 0 ] && [ -n "${selection:=$(xclip -out)}" ]; then
	set -- -- "$selection"
fi

# Continue downloads if provided with a JSON info file, else run youtube-dl
# normally.
for arg; do
	case "$arg" in
	*.info.json)
		(cd "$(dirname "$arg")"; youtube-dl --load-info-json "${arg##*/}")
		shift
		;;
	*)
		case "$PWD/" in
		"$XDG_DOWNLOAD_DIR/"*|"$HOME/.nsfw/"*)
			:
			;;
		*)
			cd "$XDG_DOWNLOAD_DIR"
			;;
		esac

		exec youtube-dl "$@"
		;;
	esac
done

