export GPG_TTY=$(tty)

alias ls='LC_COLLATE=C ls -A -1'
alias lc='LC_COLLATE=C command ls -A'
alias l='lc -p'
alias la='ls'
alias ll='ls -la'
alias lh='ll -h'

if ! type doas >/dev/null 2>&1; then
	alias doas='sudo -p "doas (%u@%h) password: " --'
fi

alias doch='eval doas $(fc -ln -1)'
alias dot='vcsh dotfiles'
alias feh='feh -. -Z -B black -D -10'
alias emacs='emacs -nw'
alias reset='reset -Q'
alias rg='rg --color never --no-heading'
alias stack='stack --color never'
alias nixos-rebuild='doas env NIXOS_CONFIG="$HOME/.nixpkgs/$HOSTNAME.nix" nixos-rebuild'
alias reportbug='reportbug --mode=standard --ui=text --mutt'

# XDG Base Directories
alias mbsync='mbsync -c "$XDG_CONFIG_HOME/isync/mbsyncrc"'
alias tmux='tmux -f $XDG_CONFIG_HOME/tmux/tmux.conf'

mkcd() { mkdir -p -- "$@" && cd -- "$1"; }
mq() { mpv --no-terminal --force-window -- "$@" & }

# subalias is like alias for subcommands
subalias() {
	local cmd body name

	name="${1%%=*}"
	cmd="${name%_*}"
	body="${1#*=}"

	eval "$cmd"'() {
		local cmd='"$cmd"' subcmd="$1"
		if type "${cmd}_${subcmd}" >/dev/null 2>&1; then
			shift
			"${cmd}_${subcmd}" "$@"
		elif type "${cmd}_${subcmd}_subalias" >/dev/null 2>&1; then
			shift
			"${cmd}_${subcmd}_subalias" "$@"
		elif type "${cmd}_subalias" >/dev/null 2>&1; then
			"${cmd}_subalias" "$@"
		else
			command "$cmd" "$@"
		fi
	}'

	if test "$body" != "$1"; then
		eval "${name}_subalias"'() { '"$body"'; }'
	fi
}

# apt subaliases
for action in install reinstall remove purge autoremove update upgrade; do
	subalias apt_${action}='doas apt '"${action}"' "$@"'
done

# Guix subaliases
subalias guix_env='guix environment "$@"'
subalias guix_try='guix environment --ad-hoc "$@"'
subalias guix_manifest='guix package --manifest="$HOME/.config/guix/profile.scm"'
subalias guix_reconfigure='doas guix system reconfigure "$HOME/.config/guix/system.scm"'
subalias guix_profile='guix package "$@"'
subalias guix_show='guix package --show="$1"'
subalias guix_search='guix package -s "$@" | recfmt "{{name}} {{version}} - {{synopsis}}
" | sort | uniq'
subalias guix_clean='git -C "$HOME/src/guix" clean -fdx -e .dir-locals-2.el -e .ignore && git checkout po/'
guix_make() {
	cd "$HOME/src/guix"
	if test -f "$HOME/src/guix/Makefile"; then
		guix environment guix -- make -C "$HOME/src/guix"
	else
		guix environment guix -- bash -c '
			cd "$HOME/src/guix"
			./bootstrap &&
			./configure --localstatedir=/var --sysconfdir=/etc &&
			make &&
			git checkout po/'
	fi
}
guix_ls() {
	local dir
	for dir in $(guix build "$1"); do
		echo
		echo "$dir:"
		(cd "$dir" && find -empty -o ! -type d) |
			sed -e '/^\\.$/d' -e 's/^\.\/\?//' |
			sort
	done | sed 1d
}

# pretty print working directory
ppwd() {
	local dir="${PWD}/" n="${1:-255}"

	case "$dir" in
	"${HOME}/"*)
		dir="~/${dir#$HOME/}"
		;;
	esac
	dir="${dir%/}"

	if test "${#dir}" -gt "$n"; then
		n=$(( n - 3 ))
		while test "${#dir}" -gt "$n"; do
			dir="${dir#?}"
		done
		dir="...${dir}"
	fi

	echo "$dir"
}

prompt() {
	local e=$? env="" S='$'
	test "$e" -eq 0 && e=""
	test "${USER_ID:=$(id -u)}" -eq 0 && S='#'

	if type git >/dev/null 2>&1; then
		branch=$(git symbolic-ref --short HEAD 2>/dev/null)
		env="${branch:+($branch)}"
	fi
	env="${env}${VCSH_REPO_NAME:+[$VCSH_REPO_NAME]}"
	env="${env}${GUIX_ENVIRONMENT:+[env]}"

	echo -n "${e:+$e|}${USER}@${HOSTNAME%%.*}:$(ppwd 28)${env:+ $env}$S "
}
PS1='$(prompt || echo "> ")'

case "$TERM" in
xterm*|rxvt*|st*|screen*|tmux*)
	printf '\e]0;%s\a' "${USER}@${HOSTNAME%%.*} ($0)"
	;;
dumb)
	export PAGER=cat
	export MANPAGER=cat
	;;
esac

if test "$PWD" != "$HOME"; then
	echo "${PWD}:"
	l -a
	echo
fi
